name: Deploy to Gigalixir

on:
  schedule:
    - cron: '0 */23 * * *'
  workflow_dispatch:
    inputs:
      deploy_reason:
        description: 'gengxindaima'
        required: false
        default: 'shoudongbushu'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Git
      run: |
        git config --global user.email "glade@outlook.com"
        git config --global user.name "glade"
        
    - name: Deploy to Gigalixir
      env:
        GIGALIXIR_EMAIL: ${{ secrets.GIGALIXIR_EMAIL }}
        GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
        GIGALIXIR_APP_NAME: ${{ secrets.GIGALIXIR_APP_NAME }}
      run: |
        echo "🚀 开始部署 - $(date)"
        
        # 安装 Gigalixir CLI
        pip3 install gigalixir
        
        # 确保开始时没有遗留的 .netrc 文件
        rm -f ~/.netrc
        
        # 登录 Gigalixir
        gigalixir login -e "$GIGALIXIR_EMAIL" -p "$GIGALIXIR_PASSWORD" -y
        
        # 创建新的临时目录并初始化
        TEMP_DIR=$(mktemp -d)
        cd $TEMP_DIR
        
        # 复制需要的文件到临时目录
        cp $GITHUB_WORKSPACE/index.js .
        cp $GITHUB_WORKSPACE/package.json .
        cp $GITHUB_WORKSPACE/apps.html .
        
        # 初始化新的 git 仓库
        git init
        git add index.js package.json apps.html
        
        # 强制创建提交，即使文件没有更改
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          git commit --allow-empty -m "Manual deployment - ${{ github.event.inputs.deploy_reason }} - $(date)"
        else
          git commit --allow-empty -m "Scheduled deployment - $(date)"
        fi
        
        # 添加远程仓库并推送
        git remote add gigalixir "https://git.gigalixir.com/${GIGALIXIR_APP_NAME}.git"
        git push gigalixir main --force
        
        echo "✅ 部署完成 - $(date)"
        
        # 清理临时目录
        cd $GITHUB_WORKSPACE
        rm -rf $TEMP_DIR
      
    - name: Cleanup credentials
      if: always()
      run: |
        echo "🧹 清理凭证..."
        if [ -f ~/.netrc ]; then
          rm -f ~/.netrc
          echo "已删除 .netrc 文件"
        else
          echo ".netrc 文件不存在"
        fi
        
        rm -f ~/.gigalixir/credentials
        rm -rf ~/.gigalixir
        
        echo "✅ 凭证清理完成"

    - name: Deployment Status
      if: always()
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          echo "✅ 部署成功完成"
          echo "部署时间: $(date)"
          echo "部署应用: ${{ secrets.GIGALIXIR_APP_NAME }}"
        else
          echo "❌ 部署失败"
          echo "失败时间: $(date)"
          echo "失败应用: ${{ secrets.GIGALIXIR_APP_NAME }}"
        fi
        
        if [ -f ~/.netrc ]; then
          echo "⚠️ 警告: .netrc 文件仍然存在"
          rm -f ~/.netrc
        else
          echo "✅ 确认 .netrc 已清理"
        fi
